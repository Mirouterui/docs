import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as l,b as s,d as t,e as d,w as p,a as i,o as r}from"./app-CYBn91fe.js";const h={},o=i(`<h1 id="程序部署" tabindex="-1"><a class="header-anchor" href="#程序部署"><span>程序部署</span></a></h1><h2 id="获取路由器key" tabindex="-1"><a class="header-anchor" href="#获取路由器key"><span>获取路由器key</span></a></h2><p>通常情况下，key是恒定的，但我依然推荐你检查一番</p><blockquote><p>可以使用<a href="/download/mikvivator">自动程序</a>获取</p></blockquote><p>在路由器登录页面按下右键，选择查看源代码，搜索<code>Encrypt</code>，提取下面<code>key</code>字段的内容</p><p><img src="https://onep.hzchu.top/mount/pic/myself/2024/07/669b68a8b244f.gif" alt="gif" loading="lazy"></p><h2 id="安装-运行" tabindex="-1"><a class="header-anchor" href="#安装-运行"><span>安装/运行</span></a></h2><h3 id="docker-部署" tabindex="-1"><a class="header-anchor" href="#docker-部署"><span>Docker 部署</span></a></h3><blockquote><p>对于一些支持docker的小米路由器，也可以尝试使用docker运行</p></blockquote><p>推荐使用 Docker 部署，执行命令创建容器：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>    --name mirouter-ui \\</span></span>
<span class="line"><span>	-p 6789:6789 \\</span></span>
<span class="line"><span>    -v $(pwd):/app/data \\</span></span>
<span class="line"><span>    --restart=always \\</span></span>
<span class="line"><span>    thun888/mirouter-ui</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Docker的端口映射命令参数为<code>-p 外部端口:内部端口</code>。若需修改端口，仅需要修改外部端口即可，且在配置文件中无需修改端口配置。</p><p>如果无法拉取镜像，请尝试更改镜像源</p></div><p>该命令会在当前目录下创建容器，配置文件及数据库一并储存在该目录下。</p><p>修改配置文件即可</p><h3 id="普通方式部署" tabindex="-1"><a class="header-anchor" href="#普通方式部署"><span>普通方式部署</span></a></h3><p>MRUI采用<code>Golang</code>编写，仅需下载二进制文件即可执行。你可以访问<a href="https://github.com/Mirouterui/mirouter-ui/releases/" target="_blank" rel="noopener noreferrer">Release</a>来获取最新版本，但鉴于GitHub在国内的访问情况，你还可以从<a href="https://mrui-api.hzchu.top/down/" target="_blank" rel="noopener noreferrer">镜像站</a>下载。</p><ol><li>下载对应架构的程序（在早期测试中观察到部分路由器与upx存在兼容性问题，如无法运行可尝试<code>_noupx</code>版本）</li><li>运行，在程序导出配置后会自动关闭</li><li>修改配置</li><li>再次运行，若未开启<code>tiny</code>模式会在下载完静态资源再后开启web服务</li><li>尝试访问<code>http://ip:port</code>吧</li></ol>`,17),k={class:"hint-container note"},c=s("p",{class:"hint-container-title"},"注",-1),u=i(`<h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><p>在看到配置文件后，来看一下配置项的含义吧</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;dev&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;password&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;key&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a2ffa5c9be07488bbb04a3a47d3c5f6a&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;ip&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;192.168.31.1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;routerunit&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;history&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;enable&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;sampletime&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;maxsaved&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8640</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;netdata_routerid&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;flushTokenTime&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1800</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;tiny&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;port&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6789</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;debug&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>配置项：</strong></p><table><thead><tr><th>配置名</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>dev</td><td>[]</td><td>路由器信息，参阅<code>dev项</code></td></tr><tr><td>history</td><td>[]</td><td>历史记录相关功能，参阅<code>history项</code></td></tr><tr><td>tiny</td><td>false</td><td>启用后，不再下载静态文件，需搭配<a href="http://mrui-web.hzchu.top/" target="_blank" rel="noopener noreferrer">在线前端</a>使用</td></tr><tr><td>netdata_routerid</td><td>0</td><td>调用netdata api时返回的路由器（对应dev项中第n个）</td></tr><tr><td>flushTokenTime</td><td>1800</td><td>刷新token时间间隔(s)</td></tr><tr><td>port</td><td>6789</td><td>网页页面端口号</td></tr><tr><td>debug</td><td>true</td><td>debug模式，建议在测试正常后关闭</td></tr></tbody></table><p><strong>dev</strong>字段是一个数组，内含的每个元素包含单个设备的配置信息。数组中的每个对象描述如下：</p><table><thead><tr><th>配置名</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>password</td><td></td><td>路由器密码</td></tr><tr><td>key</td><td>a2ffa5c9be07488bbb04a3a47d3c5f6a</td><td>路由器key（如果和前文获取的不同，请更改为自己获取的）</td></tr><tr><td>ip</td><td>192.168.31.1</td><td>路由器IP</td></tr><tr><td>routerunit</td><td>false</td><td>启用后，程序通过<code>gopsutil</code>库获取CPU占用，在支持的路由器上获取温度</td></tr></tbody></table><blockquote><p>配置多个对象以使用多路由模式，但要注意，如果使用有线/无线组网，数据统计由主路由负责，子路由无法获取信息属于正常情况</p></blockquote><p><strong>history</strong>项：</p><table><thead><tr><th>配置名</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>enable</td><td>false</td><td>是否启用历史数据统计</td></tr><tr><td>sampletime</td><td>300</td><td>采样时间间隔(s)</td></tr><tr><td>maxsaved</td><td>8640</td><td>最多记录条数</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>保存数据条数过多可能会造成前端页面卡顿。同时，为了减小历史数据拟合时产生的误差，sampletime应不超过600</p></div>`,11);function g(y,m){const e=n("RouteLink");return r(),l("div",null,[o,s("div",k,[c,s("p",null,[t("若需要部署到路由器上可参考"),d(e,{to:"/guide/deploytorouter.html"},{default:p(()=>[t("这里")]),_:1})])]),u])}const v=a(h,[["render",g],["__file","deploy.html.vue"]]),A=JSON.parse('{"path":"/guide/deploy.html","title":"程序部署","lang":"zh-CN","frontmatter":{"description":"程序部署 获取路由器key 通常情况下，key是恒定的，但我依然推荐你检查一番 可以使用自动程序获取 在路由器登录页面按下右键，选择查看源代码，搜索Encrypt，提取下面key字段的内容 gif 安装/运行 Docker 部署 对于一些支持docker的小米路由器，也可以尝试使用docker运行 推荐使用 Docker 部署，执行命令创建容器： 提示...","head":[["meta",{"property":"og:url","content":"https://mrui.hzchu.top/guide/deploy.html"}],["meta",{"property":"og:site_name","content":"Mirouter-UI"}],["meta",{"property":"og:title","content":"程序部署"}],["meta",{"property":"og:description","content":"程序部署 获取路由器key 通常情况下，key是恒定的，但我依然推荐你检查一番 可以使用自动程序获取 在路由器登录页面按下右键，选择查看源代码，搜索Encrypt，提取下面key字段的内容 gif 安装/运行 Docker 部署 对于一些支持docker的小米路由器，也可以尝试使用docker运行 推荐使用 Docker 部署，执行命令创建容器： 提示..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://onep.hzchu.top/mount/pic/myself/2024/07/669b68a8b244f.gif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-29T08:24:21.000Z"}],["meta",{"property":"article:author","content":"thun888"}],["meta",{"property":"article:modified_time","content":"2024-08-29T08:24:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"程序部署\\",\\"image\\":[\\"https://onep.hzchu.top/mount/pic/myself/2024/07/669b68a8b244f.gif\\"],\\"dateModified\\":\\"2024-08-29T08:24:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"thun888\\",\\"url\\":\\"https://www.hzchu.top\\"}]}"]]},"headers":[{"level":2,"title":"获取路由器key","slug":"获取路由器key","link":"#获取路由器key","children":[]},{"level":2,"title":"安装/运行","slug":"安装-运行","link":"#安装-运行","children":[{"level":3,"title":"Docker 部署","slug":"docker-部署","link":"#docker-部署","children":[]},{"level":3,"title":"普通方式部署","slug":"普通方式部署","link":"#普通方式部署","children":[]}]},{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]}],"git":{"createdTime":1721537160000,"updatedTime":1724919861000,"contributors":[{"name":"thun888","email":"thun888@qq.com","commits":4},{"name":"lm379","email":"69002314+lm379@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.81,"words":843},"filePathRelative":"guide/deploy.md","localizedDate":"2024年7月21日","autoDesc":true}');export{v as comp,A as data};
